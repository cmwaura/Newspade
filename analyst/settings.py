"""
Django settings for analyst project.

Generated by 'django-admin startproject' using Django 1.8.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""
import os
import dj_database_url
import config
from config import EMAIL_USE_TLS, EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_PASSWORD
from config import  EMAIL_HOST_USER, SECRET_KEY

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)



BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SECRET_KEY 
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True




# Default email settings
DEFAULT_FROM_EMAIL = "Newspade"
try:
    EMAIL_USE_TLS = EMAIL_USE_TLS
    EMAIL_HOST = EMAIL_HOST    
    EMAIL_HOST_USER = EMAIL_HOST_USER 
    EMAIL_HOST_PASSWORD = EMAIL_HOST_PASSWORD 
    EMAIL_PORT = EMAIL_PORT
except:
    pass
from django.conf import settings

SITE_URL = "http://www.newspade.com/"

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',


#-------------Django type apps------------------
    
    'djng',
    'crispy_forms',
    'markdown_deux',
    'kombu.transport.django',
    'djcelery',
    'dynamic_scraper',
    'haystack',
    'django_comments',
    'celery_haystack',
    'bootstrap_pagination',
    'markdownx',
    'taggit',

#---------------custom apps in the project----------
    'articles',   
    'mysites',
  	'accounts',




    
)

HAYSTACK_SIGNAL_PROCESSOR = 'celery_haystack.signals.CelerySignalProcessor'
MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    
    

)

ROOT_URLCONF = 'analyst.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "Templates")],
        'APP_DIRS': True,        
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            
            ],
        },
    },
]

WSGI_APPLICATION = 'analyst.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

if DEBUG is False:
    
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'newspade',
            'USER': 'cmwaura',
            'PASSWORD': '7PFTcrisG@PD',
            'HOST': 'localhost',
            'PORT': '',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
}



HAYSTACK_CONNECTIONS = {
    'default':{
        'ENGINE':'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH':os.path.join(os.path.dirname(__file__), 'whoosh_index'),
    },
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT=os.path.join(PROJECT_ROOT, "staticfiles")
STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, "static"),
    )
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(PROJECT_ROOT, "staticfiles","media")


CRISPY_TEMPLATE_PACK = 'bootstrap3'


# Registration setting for account before activated
ACCOUNT_ACTIVATION_DAYS = 7
REGISTRATION_AUTO_LOGIN = True
SITE_ID = 1
LOGIN_REDIRECT_URL = '/'


import djcelery
djcelery.setup_loader()

BROCKER_HOST = "localhost"
BROCKER_PORT = 5672
BROCKER_BACKEND = "django"
BROCKER_USER = "guest"
BROCKER_PASSWORD= "guest"
BROCKER_VHOST = "/"
BROKER_URL = 'django://'
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'

# taggit settings
TAGGIT_CASE_INSENSITIVE = True

# markdown settings
MARKDOWN_MARKDOWNIFY_FUNCTION = 'markdown.utils.markdownify'
MARKDOWN_UPLOAD_MAX_SIZE = 52428800
MARKDOWN_UPLOAD_CONTENT_TYPES =['image/jpeg', 'image/png']
MARKDOWN_IMAGE_MAX_SIZE ={'size':(500, 500), 'quality':90}
MARKDOWN_MEDIA_PATH = 'markdownx/'
MARKDOWN_EDITOR_RESIZABLE = True

db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", 'https')

ALLOWED_HOSTS = ['*']

#STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
